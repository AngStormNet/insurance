# -*- coding: utf-8 -*-
# Generated by Django 1.10.1 on 2016-09-17 11:58
from __future__ import unicode_literals

from django.db import migrations


def connect_deductibles_limits(apps, schema_editor):
	'''Connect Deductibles to liability Limits.'''
	Deductible = apps.get_model('portal', 'deductible')
	DeductibleLimit = apps.get_model('portal', 'deductiblelimit')
	Limit = apps.get_model('portal', 'limit')

	deduct_0 = Deductible.objects.get(value=0)
	deduct_5 = Deductible.objects.get(value=5000)
	deduct_15 = Deductible.objects.get(value=15000)

	limit_100_300 =   Limit.objects.get(min=100000,  max=300000)
	limit_200_600 =   Limit.objects.get(min=200000,  max=600000)
	limit_300_900 =   Limit.objects.get(min=300000,  max=900000)
	limit_250_500 =   Limit.objects.get(min=250000,  max=500000)
	limit_250_750 =   Limit.objects.get(min=250000,  max=750000)
	limit_500_1000 =  Limit.objects.get(min=500000,  max=1000000)
	limit_500_1500 =  Limit.objects.get(min=500000,  max=1500000)
	limit_750_1500 =  Limit.objects.get(min=750000,  max=1500000)
	limit_1000_1000 = Limit.objects.get(min=1000000, max=1000000)
	limit_1000_2000 = Limit.objects.get(min=1000000, max=2000000)
	limit_1000_3000 = Limit.objects.get(min=1000000, max=3000000)
	limit_1000_4000 = Limit.objects.get(min=1000000, max=4000000)
	limit_1300_3900 = Limit.objects.get(min=1300000, max=3900000)

	# The max deductible has a multiplier of 1.0
	# because it does not change the premium calculation.
	for limit in Limit.objects.all():
		DeductibleLimit.objects.get_or_create(
			deductible=deduct_15,
			limit=limit,
			multiplier=1.0
		)

	# Deductible of $5,000
	DeductibleLimit.objects.get_or_create(
		deductible=deduct_5,
		limit=limit_100_300,
		multiplier=1.129
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_5,
		limit=limit_200_600,
		multiplier=1.093
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_5,
		limit=limit_250_500,
		multiplier=1.08
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_5,
		limit=limit_250_750,
		multiplier=1.08
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_5,
		limit=limit_300_900,
		multiplier=1.07
	)

	# The rest of limits get a multiplier of 1.06
	for limit in [
		limit_500_1000,
		limit_500_1500,
		limit_750_1500,
		limit_1000_1000,
		limit_1000_2000,
		limit_1000_3000,
		limit_1000_4000,
		limit_1300_3900,
	]:
		DeductibleLimit.objects.get_or_create(
			deductible=deduct_5,
			limit=limit,
			multiplier=1.06
		)


	# Deductible of $0
	DeductibleLimit.objects.get_or_create(
		deductible=deduct_0,
		limit=limit_100_300,
		multiplier=1.199
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_0,
		limit=limit_200_600,
		multiplier=1.144
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_0,
		limit=limit_250_500,
		multiplier=1.122
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_0,
		limit=limit_250_750,
		multiplier=1.122
	)

	DeductibleLimit.objects.get_or_create(
		deductible=deduct_0,
		limit=limit_300_900,
		multiplier=1.108
	)

	# The rest of limits get a multiplier of 1.093
	for limit in [
		limit_500_1000,
		limit_500_1500,
		limit_750_1500,
		limit_1000_1000,
		limit_1000_2000,
		limit_1000_3000,
		limit_1000_4000,
		limit_1300_3900,
	]:
		DeductibleLimit.objects.get_or_create(
			deductible=deduct_0,
			limit=limit,
			multiplier=1.093
		)


def delete_deductiblelimits(apps, schema_editor):
	'''Remove all the deductiblelimit objects from the DB.'''
	apps.get_model('portal', 'deductiblelimit').objects.all().delete()

	
class Migration(migrations.Migration):

	dependencies = [
		('portal', '0006_deductiblelimit'),
	]

	operations = [
		migrations.RunPython(
			code=connect_deductibles_limits,
			reverse_code=delete_deductiblelimits
		),
	]
